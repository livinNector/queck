{
  "$defs": {
    "CommonDataQuestion": {
      "additionalProperties": false,
      "description": "Represents a set of questions that share a common context or data.\n\nAttributes:\n    - `text`: The shared context or data for the questions.\n    - `questions`: A list of questions based on the common context.",
      "properties": {
        "text": {
          "description": "The shared context or common data for the questions.",
          "title": "CommonData",
          "type": "string"
        },
        "type": {
          "default": "common_data",
          "enum": [
            "multiple_choice",
            "multiple_select",
            "numerical_answer",
            "short_answer",
            "description",
            "common_data"
          ],
          "title": "Type",
          "type": "string"
        },
        "questions": {
          "description": "A list of questions related to the common data.",
          "items": {
            "$ref": "#/$defs/Question"
          },
          "title": "ContextualQuestions",
          "type": "array"
        }
      },
      "required": [
        "text",
        "questions"
      ],
      "title": "CommonDataQuestion",
      "type": "object"
    },
    "CorrectChoice": {
      "default": "",
      "description": "Correct Choice in a multiple choice question.\n\nFormat: `(x) {text} // {feedback}`\n    - `text` is the choice content\n    - `feedback` is optional and explains the correctness or\n    details about the choice\n\nBoth text and feedback can span multiple lines.\n\nExamples:\n    - (x) correct choice // This is the correct answer\n    - (x) another correct choice\n    - |\n      (x) This is another correct choice\n      That can span muliple lines.\n      // This is going to be a multiline feedback\n      and this is the second line of the feedback",
      "pattern": "\\(x\\) *(?<text>(.|\\r?\\n)*?) *(// *(?<feedback>(.|\\r?\\n)*))?$",
      "title": "CorrectChoice",
      "type": "string"
    },
    "Description": {
      "additionalProperties": false,
      "properties": {
        "text": {
          "description": "Text only content used for holding instructions or reference information.",
          "title": "Description",
          "type": "string"
        },
        "type": {
          "default": "description",
          "enum": [
            "multiple_choice",
            "multiple_select",
            "numerical_answer",
            "short_answer",
            "description",
            "common_data"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Description",
      "type": "object"
    },
    "IncorrectChoice": {
      "default": "",
      "description": "Incorrect Choice in a multiple choice question.\n\nFormat: `( ) {text} // {feedback}`\n    - `text` is the choice content\n    - `feedback` is optional and explains the correctness or\n    details about the choice\n\nBoth text and feedback can span multiple lines.\n\nExamples:\n    - ( ) incorrect choice // This is the incorrect answer\n    - ( ) another incorrect choice\n    - |\n      ( ) This is another incorrect choice\n      That can span muliple lines.\n      // This is going to be a multiline feedback\n      and this is the second line of the feedback.",
      "pattern": "\\( \\) *(?<text>(.|\\r?\\n)*?) *(// *(?<feedback>(.|\\r?\\n)*))?$",
      "title": "IncorrectChoice",
      "type": "string"
    },
    "Integer": {
      "description": "Numerical integer answer.",
      "title": "Integer",
      "type": "integer"
    },
    "MultipleCorrectChoices": {
      "allOf": [
        {
          "contains": {
            "$ref": "#/$defs/CorrectChoice"
          },
          "errorMessage": "MultipleCorrectChoice: Should contain atleast two correct choices.",
          "minContains": 2
        }
      ],
      "description": "List of choices with multiple correct choices.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/CorrectChoice"
          },
          {
            "$ref": "#/$defs/IncorrectChoice"
          }
        ]
      },
      "title": "MultipleCorrectChoices",
      "type": "array"
    },
    "NumRange": {
      "default": "",
      "description": "Numerical range based answer.\n\nFormat: `{low}..{high}`.\n\n    - `low` and `high` are numerical values representing the\n    range boundaries.\n\nBoth `low` and `high` can be integer or floating point types.",
      "pattern": "^\\s*(?<low>-?\\d*\\.?\\d*)\\s*\\.\\.\\s*(?<high>-?\\d*\\.?\\d*)\\s*",
      "title": "NumRange",
      "type": "string"
    },
    "NumTolerance": {
      "default": "",
      "description": "Numerical answer with tolerance.\n\nFormat: `{val}|{tolerance}`\n\n    - `val` is the base value.\n    - `tolerance` specifies the allowable deviation.\n\nBoth `val` and `tolerance` can be integer or floating point types.",
      "pattern": "^\\s*(?<value>-?\\d*\\.?\\d*)\\s*\\|\\s*(?<tolerance>-?\\d*\\.?\\d*)$",
      "title": "NumTolerance",
      "type": "string"
    },
    "Question": {
      "additionalProperties": false,
      "description": "Question with an answer.\n\nAttributes:\n    - `text` : The statement or body of the question.\n\n    - `answer` : The expected answer, which can be:\n        - A list of choices (e.g., `Choice`).\n        - A numerical value (integer, range, or tolerance).\n        - A text response (string).\n        - A boolean (True/False).\n\n    - `feedback` : Optional feedback or explanation about the question or its solution.\n\n    - `marks` : The marks allotted for the question (default is 0).\n\n    - `tags` : A list of tags categorizing the question. Tags are stored in lowercase.",
      "properties": {
        "text": {
          "default": "Question statement",
          "description": "The statement or body of the question.",
          "title": "Question",
          "type": "string"
        },
        "answer": {
          "anyOf": [
            {
              "allOf": [
                {
                  "contains": {
                    "$ref": "#/$defs/IncorrectChoice"
                  },
                  "errorMessage": "Should contain atleast one incorrect choice.",
                  "minContains": 1
                },
                {
                  "contains": {
                    "$ref": "#/$defs/CorrectChoice"
                  },
                  "errorMessage": "Should contain atleast one correct choice.",
                  "minContains": 1
                }
              ],
              "anyOf": [
                {
                  "$ref": "#/$defs/SingleCorrectChoice"
                },
                {
                  "$ref": "#/$defs/MultipleCorrectChoices"
                }
              ],
              "title": "MultipleChoiceAnswer"
            },
            {
              "$ref": "#/$defs/TrueOrFalse"
            },
            {
              "$ref": "#/$defs/Integer"
            },
            {
              "$ref": "#/$defs/NumRange"
            },
            {
              "$ref": "#/$defs/NumTolerance"
            },
            {
              "$ref": "#/$defs/ShortAnswer"
            }
          ],
          "title": "Answer"
        },
        "feedback": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "",
          "description": "Optional feedback or explanation for the question. Can include solutions, hints, or clarifications.",
          "title": "Feedback"
        },
        "marks": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "number"
            }
          ],
          "default": 0,
          "description": "The marks assigned to this question. Defaults to 0.",
          "title": "Marks"
        },
        "tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A list of tags categorizing the question.",
          "title": "Tags"
        }
      },
      "required": [
        "answer"
      ],
      "title": "Question",
      "type": "object"
    },
    "ShortAnswer": {
      "description": "Text based answer.",
      "title": "ShortAnswer",
      "type": "string"
    },
    "SingleCorrectChoice": {
      "allOf": [
        {
          "contains": {
            "$ref": "#/$defs/CorrectChoice"
          },
          "errorMessage": "SingleCorrectChoice: Should contain exactly one correct choice.",
          "maxContains": 1,
          "minContains": 1
        }
      ],
      "description": "List of choices with one correct choice.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/CorrectChoice"
          },
          {
            "$ref": "#/$defs/IncorrectChoice"
          }
        ]
      },
      "title": "SingleCorrectChoice",
      "type": "array"
    },
    "TrueOrFalse": {
      "description": "True or false answer.",
      "title": "TrueOrFalse",
      "type": "boolean"
    }
  },
  "description": "Represents a YAML-based quiz format.\n\nContains a title and questions.\n\nAttributes:\n    - `title`: The title of the quiz.\n    - `questions`: A list of questions, which can be standalone             or grouped under a common context.",
  "properties": {
    "title": {
      "default": "Queck Title",
      "description": "The title of the quiz.",
      "title": "Title",
      "type": "string"
    },
    "questions": {
      "description": "A collection of questions, which may include standalone questions or common-data questions.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/Description"
          },
          {
            "$ref": "#/$defs/Question"
          },
          {
            "$ref": "#/$defs/CommonDataQuestion"
          }
        ]
      },
      "title": "Questions",
      "type": "array"
    }
  },
  "required": [
    "questions"
  ],
  "title": "Queck",
  "type": "object"
}